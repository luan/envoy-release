#!/bin/bash -e

RUN_DIR=/var/vcap/sys/run/envoy
LOG_DIR=/var/vcap/sys/log/envoy
CONF_DIR=/var/vcap/jobs/envoy/config
DATA_DIR=/var/vcap/data/envoy
TMP_DIR=$DATA_DIR/tmp

PIDFILE=$RUN_DIR/envoy.pid

source /var/vcap/packages/envoy_pid_utils/pid_utils.sh

case $1 in

  start)
    pid_guard $PIDFILE "envoy"

    mkdir -p $RUN_DIR
    chown -R vcap:vcap $RUN_DIR

    mkdir -p $LOG_DIR
    chown -R vcap:vcap $LOG_DIR

    mkdir -p $DATA_DIR
    chown -R vcap:vcap $DATA_DIR

    mkdir -p $TMP_DIR
    chown -R vcap:vcap $TMP_DIR

    # Allowed number of open file descriptors
    ulimit -n 100000

    set +e

    getent hosts sql-db.service.cf.internal
    if [[ "0" != "$?" ]]; then
      echo "DNS is not up"
      exit 1
    fi

    set -e

    <% p('proxy').each do |proxy| %>
      <% src_port = proxy['host'].split(':').last %>
      <% dst_port = proxy['address'].split(':').last %>
      <% address = proxy['address'].split(':')[1].split('/').last %>
      iptables -t nat -A OUTPUT -p tcp --dport <%= src_port %> -d <%= address %> -j DNAT --to-destination <%= address %>:<%= dst_port %>
    <% end %>

    exec chpst -u vcap:vcap /var/vcap/packages/envoy/bin/envoy --log-level trace \
      --config-path $CONF_DIR/config.json \
      2> >(tee -a $LOG_DIR/envoy.stderr.log | logger -p user.error -t vcap.envoy) \
      1> >(tee -a $LOG_DIR/envoy.stdout.log | logger -p user.info -t vcap.envoy) &

    echo $! > $PIDFILE

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: envoy_ctl {start|stop}"

    ;;

esac
